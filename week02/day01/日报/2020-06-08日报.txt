网页静态化方案
	1、创建商品详情的thymeleaf模板

	2、创建一个RabbitMQ的消费者，监听新增或修改商品的消息，收到消息后创建静态页面

	3、搭建nginx服务器，返回静态页面

redis缓存商品信息方案
	1、根据商品id到redis中查询

			  查得到，直接返回

	2、查不到，查询mysql，

						 数据放到redis中

				 设置缓存的有效期一天的时间

代码：
	public TbItem selectItemInfo(Long itemId) {
			//查询缓存
			TbItem tbItem = (TbItem) redisClient.get(ITEM_INFO + ":" + itemId + ":"+ BASE);
			if(tbItem!=null){
				return tbItem;
			}

			tbItem = tbItemMapper.selectByPrimaryKey(itemId);
			//把数据保存到缓存
			redisClient.set(ITEM_INFO + ":" + itemId + ":"+ BASE,tbItem);
			//设置缓存的有效期
			redisClient.expire(ITEM_INFO + ":" + itemId + ":"+ BASE,ITEM_INFO_EXPIRE);

			return tbItem;
		}

缓存同步
	使用消息中间件实现redis中商品信息的同步：后台修改商品则直接删除redis中的商品

缓存穿透
	描述
		缓存穿透是指缓存和数据库中都没有的数据，而用户不断发起请求，
		如发起为id为“-1”的数据或id为特别大不存在的数据。
		假如有恶意攻击，就可以利用这个漏洞，对数据库造成压力，甚至压垮数据库。
	解决方案
		缓存空对象：
		当存储层不命中后，即使返回的空对象也将其缓存起来，
		同时会设置一个过期时间（避免控制占用更多的存储空间），
		之后再访问这个数据将会从缓存中获取，保护了后端数据源

缓存击穿
	描述
		缓存击穿，是指一个key非常热点，在不停的扛着大并发，大并发集中对这一个点进行访问，
		当这个key在失效的瞬间，持续的大并发就穿破缓存，直接请求数据库，就像在一个屏障上凿开了一个洞。
	解决方案
		1. 设置热点数据永远不过期。
		2. 加分布式锁

	
	
